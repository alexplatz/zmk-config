  /*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

  #include <behaviors.dtsi>
  #include <dt-bindings/zmk/keys.h>
  #include <dt-bindings/zmk/bt.h>
  #include <dt-bindings/zmk/ext_power.h>

/ {
    behaviors {
        tdf1: tap_dance_f1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <115>;
            bindings = <&kp F1>, <&kp LC(LA(F1))>;
        };
        tdf2: tap_dance_f2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <115>;
            bindings = <&kp F1>, <&kp LC(LA(F2))>;
        };
        tdf3: tap_dance_f3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <115>;
            bindings = <&kp F3>, <&kp LC(LA(F3))>;
        };
        tdf4: tap_dance_f4 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <115>;
            bindings = <&kp F4>, <&kp LC(LA(F4))>;
        };
        tdf5: tap_dance_f5 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <115>;
            bindings = <&kp F5>, <&kp LC(LA(F5))>;
        };
        tdf6: tap_dance_f6 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <115>;
            bindings = <&kp F6>, <&kp LC(LA(F6))>;
        };
        tdf7: tap_dance_f7 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <115>;
            bindings = <&kp F7>, <&kp LC(LA(F7))>;
        };
        tdf8: tap_dance_f8 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <115>;
            bindings = <&kp F8>, <&kp LC(LA(F8))>;
        };
        tdf9: tap_dance_f9 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <115>;
            bindings = <&kp F9>, <&kp LC(LA(F9))>;
        };
        tdf10: tap_dance_f10 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <115>;
            bindings = <&kp F10>, <&kp LC(LA(F10))>;
        };
        tdf11: tap_dance_f11 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <115>;
            bindings = <&kp F11>, <&kp LC(LA(F11))>;
        };
        tdf12: tap_dance_f12 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <115>;
            bindings = <&kp F12>, <&kp LC(LA(F12))>;
        };
        tdoff: tap_dance_off {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <115>;
            bindings = <&none>, <&soft_off>;
        };
    };
};

&mt {
  tapping-term-ms = <115>;
};

  / {
    keymap {
      compatible = "zmk,keymap";
  layer0 {
          bindings = <
          &kp Q         &kp W         &kp E          &kp R          &kp T                      &kp Y          &kp U          &kp I          &kp O          &kp P 
          &mt LSHFT A   &kp S         &kp D          &kp F          &kp G                      &kp H          &kp J          &kp K          &kp L          &mt RSHFT SEMI
          &mt LCTRL Z   &mt LALT X    &mt LGUI C     &kp V          &kp B                      &kp N          &kp M          &mt RGUI COMMA &mt RALT DOT   &mt RCTRL FSLH 
                                               &lt 1 ESCAPE         &kp BACKSPACE              &kp SPACE      &lt 2 ENTER
          >;
        };
  layer1 {
          bindings = <
          &kp ESCAPE  &kp C_VOL_DN &kp UP      &kp C_VOL_UP &kp SQT                   &kp LBKT     &kp N1       &kp N2       &kp N3       &kp MINUS 
          &trans      &kp LEFT     &kp DOWN    &kp RIGHT    &kp GRAVE                 &kp BSLH     &kp N4       &kp N5       &kp N6       &kp N0 
          &kp LCTRL   &kp C_PREV   &kp C_PP    &kp C_NEXT   &kp LGUI                  &kp RBKT     &kp N7       &kp N8       &kp N9       &kp EQUAL
                                               &trans       &trans                    &kp TAB      &kp PSCRN
          >;
        };
  layer2 {
          bindings = <
          &trans      &trans      &trans      &trans      &trans                        &tdf1       &tdf2       &tdf3       &tdf4      &tdf5
          &trans      &trans      &trans      &trans      &trans                        &tdf6       &tdf7       &tdf8       &tdf9      &tdf10
          &trans      &trans      &trans      &trans      &trans                        &tdf11      &tdf12      &trans      &bt BT_NXT &tdoff 
                                              &trans      &trans                        &trans      &trans
          >;
        };
    };
  };
